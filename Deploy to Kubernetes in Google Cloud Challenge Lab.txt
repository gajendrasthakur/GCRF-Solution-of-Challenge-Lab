Initially------------
gcloud auth list
gcloud config list project

Task 1 -----

source <(gsutil cat gs://cloud-training/gsp318/marking/setup_marking_v2.sh)
gcloud source repos clone valkyrie-app --project=[Replace_Your_Project_Id]
cd valkyrie-app
cat > Dockerfile <<EOF

> see video (copy from lab instruction box as I do________from golang)
Type (EOF)--- Enter

docker build -t valkyrie-dev:v0.0.3 . [AS PER YOUR NAME AND NUMBER....See Video] //replacements
cd ..
./step1_v2.sh

Task 2 -----

docker run -p 8080:8080 valkyrie-dev:v0.0.3 & [change name and number as per your lab names]

[Ctrl+c] for exiting

./step2_v2.sh

Task 3 -----

docker tag valkyrie-dev:v0.0.3 gcr.io/qwiklabs-gcp-01-096d3d9fe9fc/valkyrie-dev:v0.0.3 [AS PER YOUR NAME AND NUMBER....See Video] //replacements
docker push gcr.io/qwiklabs-gcp-01-096d3d9fe9fc/valkyrie-dev:v0.0.3 [AS PER YOUR NAME AND NUMBER....See Video] //replacements

Task 4 -----

gcloud container clusters get-credentials valkyrie-dev --zone us-east1-d
cd valkyrie-app
sed -i s#IMAGE_HERE#gcr.io/qwiklabs-gcp-01-096d3d9fe9fc/valkyrie-dev:v0.0.3#g k8s/deployment.yaml [AS PER YOUR NAME AND NUMBER....See Video] //replacements
kubectl create -f k8s/deployment.yaml
kubectl create -f k8s/service.yaml


TASK 5 -----


git merge origin/kurt-dev

kubectl edit deployment valkyrie-dev
[After running above command see video]

docker build -t gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-dev:v0.0.4 . //replacements
docker push gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-dev:v0.0.4 //replacements
kubectl edit deployment valkyrie-dev //replacements



TASK 6 ----- and Final Task

docker ps

docker kill container_id //replacements

export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/component=jenkins-master" -l "app.kubernetes.io/instance=cd" -o jsonpath="{.items[0].metadata.name}")

kubectl port-forward $POD_NAME 8080:8080 >> /dev/null &

printf $(kubectl get secret cd-jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode);echo
---->>>>(Preview on Port 8080)
[See Video Now]

gcloud source repos list

sed -i "s/green/orange/g" source/html.go
sed -i "s/YOUR_PROJECT/$GOOGLE_CLOUD_PROJECT/g" Jenkinsfile
git config --global user.email "you@example.com"    //replacements(username)
git config --global user.name "student"   //replacements(name_from_provided_Google_Account)            
git add .
git commit -m "built pipeline init"
git push 

[See Video Now]
