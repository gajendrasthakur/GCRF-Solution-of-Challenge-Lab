// TASK - 1 : CREATE A PROJECT JUMPHOST INSTANCE

Navigation Menu -> Compute Engine -> VM Instance
Instance Name -> <Instance-Name>
Machine Configuration:-
  Series -> N1
  Machine Type -> f1 micro 
                  1 vCPU , 614MB Memory
                  
// TASK - 2 : CREATE A KUBERNETES SERVICE CLUSTER

Open Cloud Shell Terminal

gcloud config set project <Project-Id>
gcloud auth list
gcloud config set account <Username>
gcloud config list project

gcloud config set compute/zone us-east1-b

gcloud container clusters create [CLUSTER-NAME]

gcloud container clusters get-credentials [CLUSTER-NAME]

kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:2.0
kubectl expose deployment hello-server --type=LoadBalancer --port <App-Port-Number>
kubectl get service

http://[EXTERNAL-IP]:8080

// TASK - 3: SET UP AN HTTP LOAD BALANCER

cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF

gcloud compute instance-templates create web-server-template \
          --metadata-from-file startup-script=startup.sh \
          --network nucleus-vpc \
          --machine-type g1-small \
          --region us-east1

gcloud compute instance-groups managed create web-server-group \
          --base-instance-name web-server \
          --size 2 \
          --template web-server-template \
          --region us-east1

gcloud compute firewall-rules create <change name of firewall from lab instructions here> \
          --allow tcp:80 \
          --network nucleus-vpc

gcloud compute http-health-checks create http-basic-check

gcloud compute instance-groups managed \
          set-named-ports web-server-group \
          --named-ports http:80 \
          --region us-east1

gcloud compute backend-services create web-server-backend \
          --protocol HTTP \
          --http-health-checks http-basic-check \
          --global

gcloud compute backend-services add-backend web-server-backend \
          --instance-group web-server-group \
          --instance-group-region us-east1 \
          --global

gcloud compute url-maps create web-server-map \
          --default-service web-server-backend

gcloud compute target-http-proxies create http-lb-proxy \
          --url-map web-server-map

gcloud compute forwarding-rules create http-content-rule \
        --global \
        --target-http-proxy http-lb-proxy \
        --ports 80

gcloud compute forwarding-rules list
